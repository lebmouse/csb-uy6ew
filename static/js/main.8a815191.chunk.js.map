{"version":3,"sources":["App.js","index.js"],"names":["BasicExample","to","exact","path","Element","Shared","items","Array","map","_","index","Item","ref","useRef","io","useMemo","IntersectionObserver","entries","forEach","value","isIntersecting","target","setAttribute","useEffect","current","children","child","observe","disconnect","id","Box","styled","div","rootElement","document","getElementById","ReactDOM","render"],"mappings":"+OAUe,SAASA,IACtB,OACE,cAAC,IAAD,UACE,gCACE,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,uBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,UAAT,yBAIJ,uBAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,UAAZ,SACE,cAACE,EAAD,cAQZ,IAAMC,EAAK,YAAO,IAAIC,MAAM,MAE5B,SAASH,IACP,OACE,gCACE,yCACCE,EAAME,KAAI,SAACC,EAAGC,GAAJ,OACT,cAACC,EAAD,UAAmBD,GAARA,SAMnB,SAASL,IACP,IAAMO,EAAMC,mBACNC,EAAKC,mBAAQ,WACjB,OAAO,IAAIC,sBAAqB,SAACC,GAC/BA,EAAQC,SAAQ,SAACC,GACXA,EAAMC,gBACRD,EAAME,OAAOC,aAAa,eAAgB,gBAI/C,IAiBH,OAhBAC,qBAAU,WAKR,OAHIX,EAAIY,SACN,YAAIZ,EAAIY,QAAQC,UAAUP,SAAQ,SAACQ,GAAD,OAAWZ,EAAGa,QAAQD,MAEnD,WACLZ,EAAGc,gBAEJ,CAACd,IASF,gCACE,wCACA,qBAAKe,GAAG,OAAOjB,IAAKA,EAApB,SACGN,EAAME,KAAI,SAACC,EAAGC,GAAJ,OACT,cAACoB,EAAD,CAAiBlB,IAAKA,EAAtB,SACGF,GADOA,WASpB,SAASC,EAAT,GAA6B,IAAbc,EAAY,EAAZA,SACRb,EAAMC,mBAcZ,OAbAU,qBAAU,WACR,IAAMT,EAAK,IAAIE,sBAAqB,SAACC,GACnCA,EAAQC,SAAQ,SAACC,GACXA,EAAMC,gBACRD,EAAME,OAAOC,aAAa,eAAgB,cAKhD,OADAR,EAAGa,QAAQf,EAAIY,SACR,WACLV,EAAGc,gBAEJ,IACI,cAACE,EAAD,CAAKlB,IAAKA,EAAV,SAAgBa,IAGzB,IAAMK,EAAMC,IAAOC,IAAV,+MCzGHC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,K","file":"static/js/main.8a815191.chunk.js","sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport default function BasicExample() {\n  return (\n    <Router>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"/\">element</Link>\n          </li>\n          <li>\n            <Link to=\"/shared\">shared</Link>\n          </li>\n        </ul>\n\n        <hr />\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Element />\n          </Route>\n          <Route path=\"/shared\">\n            <Shared />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nconst items = [...new Array(50000)];\n\nfunction Element() {\n  return (\n    <div>\n      <h2>Element</h2>\n      {items.map((_, index) => (\n        <Item key={index}>{index}</Item>\n      ))}\n    </div>\n  );\n}\n\nfunction Shared() {\n  const ref = useRef();\n  const io = useMemo(() => {\n    return new IntersectionObserver((entries) => {\n      entries.forEach((value) => {\n        if (value.isIntersecting) {\n          value.target.setAttribute('data-visible', 'true');\n        }\n      });\n    });\n  }, []);\n  useEffect(() => {\n    // console.dir(ref.current);\n    if (ref.current) {\n      [...ref.current.children].forEach((child) => io.observe(child));\n    }\n    return () => {\n      io.disconnect();\n    };\n  }, [io]);\n  // const observe = useCallback(\n  //   (node) => {\n  //     io.observe(node);\n  //   },\n  //   [io]\n  // );\n\n  return (\n    <div>\n      <h2>Shared</h2>\n      <div id=\"list\" ref={ref}>\n        {items.map((_, index) => (\n          <Box key={index} ref={ref}>\n            {index}\n          </Box>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction Item({ children }) {\n  const ref = useRef();\n  useEffect(() => {\n    const io = new IntersectionObserver((entries) => {\n      entries.forEach((value) => {\n        if (value.isIntersecting) {\n          value.target.setAttribute('data-visible', 'true');\n        }\n      });\n    });\n    io.observe(ref.current);\n    return () => {\n      io.disconnect();\n    };\n  }, []);\n  return <Box ref={ref}>{children}</Box>;\n}\n\nconst Box = styled.div`\n  display: inline-block;\n  width: 40px;\n  padding: 4px;\n  text-align: center;\n  border: 1px solid black;\n  color: white;\n  &[data-visible='true'] {\n    color: black;\n  }\n`;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}